import { motion } from 'framer-motion';
import React, { useState, useEffect } from 'react';
import { useInView } from 'react-intersection-observer';
import Image from 'next/image';

const PhoneMockup = () => {
  // Animation and visibility hooks
  const [ref, inView] = useInView({ 
    triggerOnce: false,
    threshold: 0.2
  });
  
  const [animateUI, setAnimateUI] = useState(false);
  const [currentScreen, setCurrentScreen] = useState(0);
  
  // Animate UI elements when phone comes into view
  useEffect(() => {
    if (inView) {
      const timer = setTimeout(() => setAnimateUI(true), 500);
      return () => clearTimeout(timer);
    }
  }, [inView]);
  
  // Screen switching animation
  useEffect(() => {
    if (animateUI) {
      const interval = setInterval(() => {
        setCurrentScreen(prev => (prev + 1) % 3);
      }, 5000);
      return () => clearInterval(interval);
    }
  }, [animateUI]);
  
  return (
    <div className="relative w-full max-w-[320px] mx-auto [perspective:1000px]" ref={ref}>
      {/* Floating effects */}
      <motion.div 
        className="absolute -z-10 w-64 h-64 rounded-full bg-grappl-orange/20 blur-3xl"
        initial={{ opacity: 0, scale: 0.8 }}
        animate={inView ? { opacity: 0.6, scale: 1 } : { opacity: 0 }}
        transition={{ duration: 1, delay: 0.2 }}
        style={{ top: '-10%', left: '-30%' }}
      />
      <motion.div 
        className="absolute -z-10 w-64 h-64 rounded-full bg-grappl-orange/10 blur-3xl"
        initial={{ opacity: 0, scale: 0.8 }}
        animate={inView ? { opacity: 0.5, scale: 1 } : { opacity: 0 }}
        transition={{ duration: 1, delay: 0.5 }}
        style={{ bottom: '0%', right: '-40%' }}
      />
      <motion.div
        className="absolute -z-10 w-[500px] h-[500px] rounded-full bg-gradient-to-r from-orange-500/5 to-yellow-500/5 blur-3xl"
        initial={{ opacity: 0 }}
        animate={inView ? { opacity: 1 } : { opacity: 0 }}
        transition={{ duration: 1.5 }}
        style={{ top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}
      />
      {/* Phone frame container */}
      <motion.div 
        className="relative z-10"
        initial={{ opacity: 0, y: 20, rotateY: 15, rotateX: -5 }}
        animate={inView ? { opacity: 1, y: 0, rotateY: 0, rotateX: 0 } : {}}
        transition={{ type: "spring", stiffness: 50, damping: 15 }}
      >
        {/* iPhone premium frame */}
        <div className="relative rounded-[45px] overflow-hidden shadow-[0_5px_40px_rgba(0,0,0,0.15)] border-[12px] border-gray-100 bg-white w-full">
          {/* Device notch */}
          <div className="absolute top-0 left-1/2 transform -translate-x-1/2 w-[30%] h-[34px] bg-black rounded-b-[14px] z-20 flex justify-center items-end pb-1">
            <div className="w-2.5 h-2.5 rounded-full bg-gray-600 mr-3"></div>
            <div className="w-14 h-1.5 rounded-full bg-gray-700"></div>
            <div className="w-2.5 h-2.5 rounded-full bg-gray-600 ml-3"></div>
          </div>
          
          {/* Side buttons */}
          <div className="absolute top-[90px] -right-[13px] w-[4px] h-[35px] bg-gray-200 rounded-r-sm"></div>
          <div className="absolute top-[140px] -right-[13px] w-[4px] h-[65px] bg-gray-200 rounded-r-sm"></div>
          <div className="absolute top-[90px] -left-[13px] w-[4px] h-[35px] bg-gray-200 rounded-l-sm"></div>
          
          {/* App screen with premium UI */}
          <div className="relative aspect-[9/19] w-full bg-gradient-to-b from-white to-gray-50 overflow-hidden">
            {/* Screen reflection overlay */}
            <div className="absolute inset-0 bg-gradient-to-tr from-transparent via-white/40 to-white/20 z-10 pointer-events-none"></div>
            
            {/* Status bar */}
            <div className="absolute top-0 left-0 right-0 h-7 flex items-center justify-between px-6 z-10">
              <motion.div 
                className="text-black text-xs font-semibold" 
                initial={{ opacity: 0 }}
                animate={animateUI ? { opacity: 1 } : {}}
                transition={{ delay: 0.3 }}
              >
                9:41
              </motion.div>
              
              <motion.div 
                className="flex items-center space-x-1.5"
                initial={{ opacity: 0 }}
                animate={animateUI ? { opacity: 1 } : {}}
                transition={{ delay: 0.5 }}
              >
                {/* Signal strength */}
                <svg height="12" width="18" viewBox="0 0 18 12" fill="black">
                  <path d="M0,8 L2,8 L2,4 L0,4 L0,8 Z M4,12 L6,12 L6,0 L4,0 L4,12 Z M8,8 L10,8 L10,4 L8,4 L8,8 Z M12,6 L14,6 L14,6 L12,6 L12,6 Z">
                    <animate attributeName="d" dur="0.3s" fill="freeze" begin={animateUI ? '0.7s' : 'indefinite'}
                      to="M0,8 L2,8 L2,4 L0,4 L0,8 Z M4,12 L6,12 L6,0 L4,0 L4,12 Z M8,12 L10,12 L10,0 L8,0 L8,12 Z M12,8 L14,8 L14,4 L12,4 L12,8 Z" />
                  </path>
                </svg>
                
                {/* WiFi */}
                <svg height="12" width="16" viewBox="0 0 16 12" fill="black">
                  <path d="M8,10 C8.5522847,10 9,10.4477153 9,11 C9,11.5522847 8.5522847,12 8,12 C7.44771525,12 7,11.5522847 7,11 C7,10.4477153 7.44771525,10 8,10 Z M3.38,6.73 C4.68,5.42 6.26,4.75 8,4.75 C9.74,4.75 11.32,5.42 12.62,6.73 L14.03,5.32 C12.38,3.68 10.27,2.75 8,2.75 C5.73,2.75 3.62,3.68 1.97,5.32 L3.38,6.73 Z M0.65,3.29 C2.93,0.99 5.37,-0.13 8.1,-0.13 C10.83,-0.13 13.18,0.99 15.46,3.29 L16.81,1.93 C14.19,-0.72 11.35,-2 8.1,-2 C4.85,-2 1.9,-0.72 -0.72,1.93 L0.65,3.29 Z" opacity="0.8">
                    <animate attributeName="opacity" begin={animateUI ? '0.9s' : 'indefinite'} dur="0.3s" fill="freeze" to="1" />
                  </path>
                </svg>
                
                {/* Battery */}
                <svg height="12" width="25" viewBox="0 0 25 12" fill="black">
                  <rect x="2" y="2" width="18" height="8" rx="1.5" fill="none" stroke="black" />
                  <rect x="23" y="4" width="2" height="4" rx="1" />
                  <rect x="3" y="3" width="12" height="6" rx="1" fillOpacity="0.4">
                    <animate attributeName="width" dur="0.4s" fill="freeze" begin={animateUI ? '1.1s' : 'indefinite'} to="16" />
                    <animate attributeName="fillOpacity" dur="0.4s" fill="freeze" begin={animateUI ? '1.1s' : 'indefinite'} to="1" />
                  </rect>
                </svg>
              </motion.div>
            </div>
            
            {/* App header */}
            <div className="px-4 pt-6 pb-4 relative overflow-hidden z-10 bg-white">
              {/* User info */}
              <div className="flex justify-between items-center mb-4">
                <div className="flex items-center gap-2">
                  <div className="w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center overflow-hidden">
                    <svg className="w-5 h-5 text-gray-500" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                    </svg>
                  </div>
                  <div>
                    <div className="text-sm text-gray-600">Hi, Alexandra</div>
                    <div className="font-bold text-gray-900">
                      GRAPPL<span className="text-grappl-orange">APP</span>
                    </div>
                  </div>
                </div>
                <div className="relative">
                  <div className="w-8 h-8 rounded-full bg-gray-50 border border-gray-200 flex items-center justify-center">
                    <svg className="w-4 h-4 text-gray-600" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9" />
                    </svg>
                  </div>
                  <div className="absolute top-0 right-0 w-2 h-2 bg-red-500 rounded-full"></div>
                </div>
              </div>
              
              {/* Weekly stats */}
              <div className="mb-5">
                <div className="text-sm text-gray-500 mb-1">Weekly Workouts</div>
                <div className="text-3xl font-bold">4 of 5 <span className="text-lg font-medium text-gray-500">completed</span></div>
              </div>
              
              {/* Action buttons */}
              <div className="flex gap-2 mb-6">
                <motion.button 
                  className="flex-1 bg-grappl-orange rounded-3xl h-11 text-sm text-white font-medium flex items-center justify-center gap-1 shadow-sm"
                  whileTap={{ scale: 0.98 }}
                >
                  <svg className="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                  </svg>
                  Book Session
                </motion.button>
                <motion.button 
                  className="flex-1 bg-lime-400 rounded-3xl h-11 text-sm text-black font-medium flex items-center justify-center gap-1 shadow-sm"
                  whileTap={{ scale: 0.98 }}
                >
                  <svg className="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                  </svg>
                  View Schedule
                </motion.button>
              </div>
              
              {/* Premium card */}
              <motion.div 
                className="bg-grappl-orange rounded-2xl p-4 mb-5 relative overflow-hidden shadow-sm"
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.5 }}
                whileHover={{ scale: 1.02 }}
              >
                <div className="relative z-10">
                  <div className="text-white font-medium mb-1">Upgrade to Premium</div>
                  <div className="text-white font-medium mb-1">Access all Grappl gyms</div>
                  <div className="text-white/70 text-xs mb-3">First month free →</div>
                </div>
                
                {/* Pattern */}
                <div className="absolute right-1 top-1/2 -translate-y-1/2">
                  <svg width="80" height="80" viewBox="0 0 80 80" fill="none">
                    <circle cx="40" cy="40" r="40" fill="rgba(255,255,255,0.1)" />
                    <circle cx="40" cy="40" r="30" fill="rgba(255,255,255,0.1)" />
                    <circle cx="40" cy="40" r="20" fill="rgba(255,255,255,0.1)" />
                  </svg>
                </div>
              </motion.div>
            </div>
            
            {/* Promotional card */}
            <motion.div 
              className="absolute top-[240px] left-4 right-4 z-10"
              initial={{ opacity: 0 }}
              animate={animateUI ? { opacity: 1 } : {}}
              transition={{ delay: 1.4 }}
            >
              {/* Promo card */}
              <motion.div 
                className="bg-gradient-to-r from-indigo-600 to-violet-500 rounded-xl p-3 text-white shadow-md"
                whileHover={{ y: -2 }}
              >
                <div className="text-sm font-medium mb-0.5">Invite a friend and</div>
                <div className="text-base font-bold mb-2">get a free class</div>
                <div className="text-xs text-white/80 underline">Learn More →</div>
              </motion.div>
            </motion.div>
            
            {/* Main Content - Upcoming Classes */}
            <div className="absolute top-[290px] left-0 right-0 bottom-16 overflow-y-auto hide-scrollbar px-4 z-10">
              {/* Classes header */}
              <div className="flex justify-between items-center mb-2">
                <div className="text-sm font-semibold">Upcoming Classes</div>
                <div className="text-xs text-grappl-orange">See All</div>
              </div>

              {/* Classes List */}
              <motion.div 
                className="space-y-3"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 1.7 }}
              >
                {/* Class 1 - Brazilian Jiu-Jitsu */}
                <motion.div 
                  className="bg-white rounded-xl p-3 shadow-sm border border-gray-100 flex justify-between items-center"
                  initial={{ opacity: 0, y: 10 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 1.8 }}
                  whileHover={{ scale: 1.02 }}
                >
                  <div className="flex items-center gap-3">
                    <div className="w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center">
                      <svg className="w-5 h-5 text-white" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                      </svg>
                    </div>
                    <div>
                      <div className="font-medium">Brazilian Jiu-Jitsu</div>
                      <div className="text-xs text-gray-500">Today, 5:30 PM • 90 min</div>
                    </div>
                  </div>
                  <div className="text-right">
                    <div className="font-semibold text-grappl-orange">Intermediate</div>
                    <div className="text-xs text-gray-500">Coach: Mike</div>
                  </div>
                </motion.div>
                
                {/* Class 2 - Yoga for BJJ */}
                <motion.div 
                  className="bg-white rounded-xl p-3 shadow-sm border border-gray-100 flex justify-between items-center"
                  initial={{ opacity: 0, y: 10 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 1.9 }}
                  whileHover={{ scale: 1.02 }}
                >
                  <div className="flex items-center gap-3">
                    <div className="w-10 h-10 bg-purple-400 rounded-full flex items-center justify-center">
                      <svg className="w-5 h-5 text-white" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                      </svg>
                    </div>
                    <div>
                      <div className="font-medium">Yoga for BJJ</div>
                      <div className="text-xs text-gray-500">Tomorrow, 10:00 AM • 60 min</div>
                    </div>
                  </div>
                  <div className="text-right">
                    <div className="font-semibold text-purple-500">All Levels</div>
                    <div className="text-xs text-gray-500">Coach: Sarah</div>
                  </div>
                </motion.div>
                
                {/* Class 3 - No-Gi Grappling */}
                <motion.div 
                  className="bg-white rounded-xl p-3 shadow-sm border border-gray-100 flex justify-between items-center"
                  initial={{ opacity: 0, y: 10 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 2.0 }}
                  whileHover={{ scale: 1.02 }}
                >
                  <div className="flex items-center gap-3">
                    <div className="w-10 h-10 bg-grappl-orange rounded-full flex items-center justify-center">
                      <svg className="w-5 h-5 text-white" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
                      </svg>
                    </div>
                    <div>
                      <div className="font-medium">No-Gi Grappling</div>
                      <div className="text-xs text-gray-500">Friday, 7:00 PM • 90 min</div>
                    </div>
                  </div>
                  <div className="text-right">
                    <div className="font-semibold text-grappl-orange">Advanced</div>
                    <div className="text-xs text-gray-500">Coach: Alex</div>
                  </div>
                </motion.div>
              </motion.div>
            </div>
            
            {/* Bottom navigation bar */}
            <div className="absolute bottom-0 left-0 right-0 z-20">
              {/* Bottom bar background with blur effect */}
              <div className="absolute inset-0 bg-white shadow-[0_-1px_3px_rgba(0,0,0,0.05)] border-t border-gray-200 h-20"></div>
              
              {/* Home indicator */}
              <div className="absolute bottom-1 left-1/2 transform -translate-x-1/2 w-32 h-1 bg-gray-300 rounded-full"></div>
              
              {/* Navigation icons */}
              <div className="relative z-10 h-16 flex items-center justify-around px-6">
                {[
                  { icon: '/home.svg', label: 'Home', color: 'text-gray-400' },
                  { icon: '/search.svg', label: 'Search', color: 'text-gray-400' },
                  { icon: '/calendar.svg', label: 'Classes', color: 'text-grappl-orange', active: true },
                  { icon: '/user.svg', label: 'Profile', color: 'text-gray-400' },
                  { icon: '/settings.svg', label: 'Settings', color: 'text-gray-400' }
                ].map((item, i) => (
                  <motion.div 
                    key={i} 
                    className={`relative p-1 flex flex-col items-center justify-center ${item.color}`}
                    initial={{ opacity: 0, y: 10 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: 0.7 + (i * 0.1) }}
                  >
                    {/* Navigation icon */}
                    <div className="w-8 h-8 flex items-center justify-center">
                      {item.active ? (
                        <div className="w-12 h-12 rounded-full bg-grappl-orange/10 flex items-center justify-center">
                          <svg className="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth={2}>
                            {item.label === 'Classes' && (
                              <path strokeLinecap="round" strokeLinejoin="round" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                            )}
                          </svg>
                        </div>
                      ) : (
                        <svg className="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth={1.5}>
                          {item.label === 'Home' && (
                            <path strokeLinecap="round" strokeLinejoin="round" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                          )}
                          {item.label === 'Search' && (
                            <path strokeLinecap="round" strokeLinejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                          )}
                          {item.label === 'Profile' && (
                            <path strokeLinecap="round" strokeLinejoin="round" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                          )}
                          {item.label === 'Settings' && (
                            <path strokeLinecap="round" strokeLinejoin="round" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37.996-.608 1.366-1.977 1.065-2.572M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                          )}
                        </svg>
                      )}
                    </div>
                    
                    {/* Label */}
                    <div className="text-[10px] mt-1">{item.label}</div>
                  </motion.div>
                ))}
              </div>
            </div>
          </div>
        </div>
        
        {/* Bottom reflection/shadow effect */}
        <div className="absolute -bottom-5 left-1/2 transform -translate-x-1/2 w-4/5 h-12 bg-black/20 filter blur-xl rounded-full"></div>
        
        {/* Subtle phone tilt reflection */}
        <div className="absolute top-0 left-0 right-0 h-1/3 bg-gradient-to-b from-white/10 to-transparent rounded-t-[45px] opacity-50"></div>
      </motion.div>
    </div>
  );
};

export default PhoneMockup;
